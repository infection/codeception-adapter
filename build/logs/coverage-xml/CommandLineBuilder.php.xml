<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="CommandLineBuilder.php" path="/">
    <totals>
      <lines total="122" comments="58" code="64" executable="20" executed="16" percent="80.00"/>
      <methods count="3" tested="1" percent="33.33"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="0" percent="0.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="Infection\TestFramework\Codeception\CommandLineBuilder" start="45" executable="20" executed="16" crap="11.97">
      <package full="" name="" sub="" category=""/>
      <namespace name="Infection\TestFramework\Codeception"/>
      <method name="build" signature="build(string $testFrameworkExecutable, array $phpExtraArgs, array $frameworkArgs): array" start="58" end="90" crap="6.40" executable="9" executed="7" coverage="77.777777777778"/>
      <method name="findPhp" signature="findPhp(): array" start="95" end="116" crap="4.13" executable="10" executed="8" coverage="80"/>
      <method name="isBatchFile" signature="isBatchFile(string $path): bool" start="118" end="121" crap="1" executable="1" executed="1" coverage="100"/>
    </class>
    <coverage>
      <line nr="60">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_if_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_the_output_dir_to_tmp_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_populates_include_coverage_key_from_src_folders_if_not_set"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_runs_tests_with_a_random_order"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_enables_coverage_if_not_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_coverage_phpunit_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_junit_xml_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
      </line>
      <line nr="67">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_if_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_the_output_dir_to_tmp_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_populates_include_coverage_key_from_src_folders_if_not_set"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_runs_tests_with_a_random_order"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_enables_coverage_if_not_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_coverage_phpunit_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_junit_xml_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
      </line>
      <line nr="75">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_if_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_the_output_dir_to_tmp_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_populates_include_coverage_key_from_src_folders_if_not_set"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_runs_tests_with_a_random_order"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_enables_coverage_if_not_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_coverage_phpunit_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_junit_xml_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
      </line>
      <line nr="82">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_if_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_the_output_dir_to_tmp_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_populates_include_coverage_key_from_src_folders_if_not_set"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_runs_tests_with_a_random_order"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_enables_coverage_if_not_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_coverage_phpunit_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_junit_xml_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
      </line>
      <line nr="83">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_if_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_the_output_dir_to_tmp_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_populates_include_coverage_key_from_src_folders_if_not_set"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_runs_tests_with_a_random_order"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_enables_coverage_if_not_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_coverage_phpunit_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_junit_xml_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
      </line>
      <line nr="85">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_if_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_the_output_dir_to_tmp_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_populates_include_coverage_key_from_src_folders_if_not_set"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_runs_tests_with_a_random_order"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_enables_coverage_if_not_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_coverage_phpunit_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_junit_xml_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
      </line>
      <line nr="89">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_if_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_the_output_dir_to_tmp_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_populates_include_coverage_key_from_src_folders_if_not_set"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_runs_tests_with_a_random_order"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_enables_coverage_if_not_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_coverage_phpunit_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_junit_xml_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
      </line>
      <line nr="97">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_if_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_the_output_dir_to_tmp_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_populates_include_coverage_key_from_src_folders_if_not_set"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_runs_tests_with_a_random_order"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_enables_coverage_if_not_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_coverage_phpunit_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_junit_xml_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
      </line>
      <line nr="98">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_if_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_the_output_dir_to_tmp_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_populates_include_coverage_key_from_src_folders_if_not_set"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_runs_tests_with_a_random_order"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_enables_coverage_if_not_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_coverage_phpunit_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_junit_xml_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
      </line>
      <line nr="100">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_if_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_the_output_dir_to_tmp_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_populates_include_coverage_key_from_src_folders_if_not_set"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_runs_tests_with_a_random_order"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_enables_coverage_if_not_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_coverage_phpunit_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_junit_xml_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
      </line>
      <line nr="104">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_if_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_the_output_dir_to_tmp_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_populates_include_coverage_key_from_src_folders_if_not_set"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_runs_tests_with_a_random_order"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_enables_coverage_if_not_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_coverage_phpunit_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_junit_xml_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
      </line>
      <line nr="106">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_if_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_the_output_dir_to_tmp_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_populates_include_coverage_key_from_src_folders_if_not_set"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_runs_tests_with_a_random_order"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_enables_coverage_if_not_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_coverage_phpunit_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_junit_xml_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
      </line>
      <line nr="108">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_if_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_the_output_dir_to_tmp_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_populates_include_coverage_key_from_src_folders_if_not_set"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_runs_tests_with_a_random_order"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_enables_coverage_if_not_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_coverage_phpunit_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_junit_xml_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
      </line>
      <line nr="112">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_if_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_the_output_dir_to_tmp_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_populates_include_coverage_key_from_src_folders_if_not_set"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_runs_tests_with_a_random_order"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_enables_coverage_if_not_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_coverage_phpunit_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_junit_xml_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
      </line>
      <line nr="115">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_if_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_the_output_dir_to_tmp_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_populates_include_coverage_key_from_src_folders_if_not_set"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_runs_tests_with_a_random_order"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_enables_coverage_if_not_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_coverage_phpunit_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_junit_xml_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
      </line>
      <line nr="120">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_if_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_the_output_dir_to_tmp_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_populates_include_coverage_key_from_src_folders_if_not_set"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_runs_tests_with_a_random_order"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_enables_coverage_if_not_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_coverage_phpunit_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_junit_xml_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="3">
        <token name="T_DOC_COMMENT"> * This code is licensed under the BSD 3-Clause License.</token>
      </line>
      <line no="4">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="5">
        <token name="T_DOC_COMMENT"> * Copyright (c) 2017, Maks Rafalko</token>
      </line>
      <line no="6">
        <token name="T_DOC_COMMENT"> * All rights reserved.</token>
      </line>
      <line no="7">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="8">
        <token name="T_DOC_COMMENT"> * Redistribution and use in source and binary forms, with or without</token>
      </line>
      <line no="9">
        <token name="T_DOC_COMMENT"> * modification, are permitted provided that the following conditions are met:</token>
      </line>
      <line no="10">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="11">
        <token name="T_DOC_COMMENT"> * * Redistributions of source code must retain the above copyright notice, this</token>
      </line>
      <line no="12">
        <token name="T_DOC_COMMENT"> *   list of conditions and the following disclaimer.</token>
      </line>
      <line no="13">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="14">
        <token name="T_DOC_COMMENT"> * * Redistributions in binary form must reproduce the above copyright notice,</token>
      </line>
      <line no="15">
        <token name="T_DOC_COMMENT"> *   this list of conditions and the following disclaimer in the documentation</token>
      </line>
      <line no="16">
        <token name="T_DOC_COMMENT"> *   and/or other materials provided with the distribution.</token>
      </line>
      <line no="17">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="18">
        <token name="T_DOC_COMMENT"> * * Neither the name of the copyright holder nor the names of its</token>
      </line>
      <line no="19">
        <token name="T_DOC_COMMENT"> *   contributors may be used to endorse or promote products derived from</token>
      </line>
      <line no="20">
        <token name="T_DOC_COMMENT"> *   this software without specific prior written permission.</token>
      </line>
      <line no="21">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="22">
        <token name="T_DOC_COMMENT"> * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"</token>
      </line>
      <line no="23">
        <token name="T_DOC_COMMENT"> * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE</token>
      </line>
      <line no="24">
        <token name="T_DOC_COMMENT"> * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE</token>
      </line>
      <line no="25">
        <token name="T_DOC_COMMENT"> * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE</token>
      </line>
      <line no="26">
        <token name="T_DOC_COMMENT"> * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL</token>
      </line>
      <line no="27">
        <token name="T_DOC_COMMENT"> * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR</token>
      </line>
      <line no="28">
        <token name="T_DOC_COMMENT"> * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER</token>
      </line>
      <line no="29">
        <token name="T_DOC_COMMENT"> * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,</token>
      </line>
      <line no="30">
        <token name="T_DOC_COMMENT"> * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE</token>
      </line>
      <line no="31">
        <token name="T_DOC_COMMENT"> * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</token>
      </line>
      <line no="32">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="33"/>
      <line no="34">
        <token name="T_DECLARE">declare</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">strict_types</token>
        <token name="T_EQUAL">=</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="35"/>
      <line no="36">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Infection</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">TestFramework</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Codeception</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="37"/>
      <line no="38">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Infection</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Finder</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Exception</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">FinderException</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="39">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">PHP_SAPI</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="40">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Symfony</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Component</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Process</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">PhpExecutableFinder</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="41"/>
      <line no="42">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="43">
        <token name="T_DOC_COMMENT"> * @internal</token>
      </line>
      <line no="44">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="45">
        <token name="T_FINAL">final</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CommandLineBuilder</token>
      </line>
      <line no="46">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="47">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="48">
        <token name="T_DOC_COMMENT">     * @var string[]|null</token>
      </line>
      <line no="49">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="50">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$cachedPhpCmdLine</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="51"/>
      <line no="52">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="53">
        <token name="T_DOC_COMMENT">     * @param string[] $frameworkArgs</token>
      </line>
      <line no="54">
        <token name="T_DOC_COMMENT">     * @param string[] $phpExtraArgs</token>
      </line>
      <line no="55">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="56">
        <token name="T_DOC_COMMENT">     * @return string[]</token>
      </line>
      <line no="57">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="58">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">build</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$testFrameworkExecutable</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$phpExtraArgs</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$frameworkArgs</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
      </line>
      <line no="59">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="60">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isBatchFile</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$testFrameworkExecutable</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="61">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_merge</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$testFrameworkExecutable</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$frameworkArgs</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="62">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="63"/>
      <line no="64">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">/*</token>
      </line>
      <line no="65">
        <token name="T_COMMENT">         * That's an empty options list by all means, we need to see it as such</token>
      </line>
      <line no="66">
        <token name="T_COMMENT">         */</token>
      </line>
      <line no="67">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$phpExtraArgs</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_filter</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$phpExtraArgs</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="68"/>
      <line no="69">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">/*</token>
      </line>
      <line no="70">
        <token name="T_COMMENT">         * Run an executable as it is if we're using a standard CLI and</token>
      </line>
      <line no="71">
        <token name="T_COMMENT">         * there's a standard interpreter available on PATH.</token>
      </line>
      <line no="72">
        <token name="T_COMMENT">         *</token>
      </line>
      <line no="73">
        <token name="T_COMMENT">         * This lets folks use, say, a bash wrapper over phpunit.</token>
      </line>
      <line no="74">
        <token name="T_COMMENT">         */</token>
      </line>
      <line no="75">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'cli'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">PHP_SAPI</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$phpExtraArgs</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">is_executable</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$testFrameworkExecutable</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BACKTICK">`</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">command -v php</token>
        <token name="T_BACKTICK">`</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="76">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_merge</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$testFrameworkExecutable</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$frameworkArgs</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="77">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="78"/>
      <line no="79">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">/*</token>
      </line>
      <line no="80">
        <token name="T_COMMENT">         * In all other cases run it with a chosen PHP interpreter</token>
      </line>
      <line no="81">
        <token name="T_COMMENT">         */</token>
      </line>
      <line no="82">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$commandLineArgs</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_merge</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="83">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">findPhp</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="84">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$phpExtraArgs</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="85">
        <token name="T_WHITESPACE">            </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$testFrameworkExecutable</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="86">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$frameworkArgs</token>
      </line>
      <line no="87">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="88"/>
      <line no="89">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_filter</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$commandLineArgs</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="90">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="91"/>
      <line no="92">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="93">
        <token name="T_DOC_COMMENT">     * @return string[]</token>
      </line>
      <line no="94">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="95">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">findPhp</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
      </line>
      <line no="96">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="97">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">cachedPhpCmdLine</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="98">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$phpExec</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">PhpExecutableFinder</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">find</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">false</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="99"/>
      <line no="100">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$phpExec</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="101">
        <token name="T_WHITESPACE">                </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">FinderException</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">phpExecutableNotFound</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="102">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="103"/>
      <line no="104">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$phpCmd</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="105"/>
      <line no="106">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$phpCmd</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$phpExec</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="107"/>
      <line no="108">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">PHP_SAPI</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'phpdbg'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="109">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$phpCmd</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'-qrr'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="110">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="111"/>
      <line no="112">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">cachedPhpCmdLine</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$phpCmd</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="113">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="114"/>
      <line no="115">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">cachedPhpCmdLine</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="116">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="117"/>
      <line no="118">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">isBatchFile</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$path</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
      </line>
      <line no="119">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="120">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">substr</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$path</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_MINUS">-</token>
        <token name="T_LNUMBER">4</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'.bat'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="121">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="122">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="123"/>
    </source>
  </file>
</phpunit>
