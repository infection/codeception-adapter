<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="CodeceptionAdapter.php" path="/">
    <totals>
      <lines total="363" comments="56" code="307" executable="120" executed="99" percent="82.50"/>
      <methods count="15" tested="11" percent="73.33"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="0" percent="0.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="Infection\TestFramework\Codeception\CodeceptionAdapter" start="53" executable="120" executed="99" crap="34.82">
      <package full="" name="" sub="" category=""/>
      <namespace name="Infection\TestFramework\Codeception"/>
      <method name="__construct" signature="__construct(&#10;        string $testFrameworkExecutable,&#10;        CommandLineBuilder $commandLineBuilder,&#10;        VersionParser $versionParser,&#10;        JUnitTestCaseSorter $jUnitTestCaseSorter,&#10;        Filesystem $filesystem,&#10;        string $jUnitFilePath,&#10;        string $tmpDir,&#10;        string $projectDir,&#10;        array $originalConfigContentParsed,&#10;        array $srcDirs&#10;    )" start="85" end="107" crap="1" executable="11" executed="11" coverage="100"/>
      <method name="hasJUnitReport" signature="hasJUnitReport(): bool" start="109" end="112" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="testsPass" signature="testsPass(string $output): bool" start="114" end="134" crap="5" executable="8" executed="8" coverage="100"/>
      <method name="getMemoryUsed" signature="getMemoryUsed(string $output): float" start="136" end="143" crap="2" executable="3" executed="3" coverage="100"/>
      <method name="getName" signature="getName(): string" start="145" end="148" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="getInitialTestRunCommandLine" signature="getInitialTestRunCommandLine(string $extraOptions, array $phpExtraArgs, bool $skipCoverage): array" start="150" end="176" crap="1" executable="16" executed="16" coverage="100"/>
      <method name="getMutantCommandLine" signature="getMutantCommandLine(&#10;        array $tests,&#10;        string $mutatedFilePath,&#10;        string $mutationHash,&#10;        string $mutationOriginalFilePath,&#10;        string $extraOptions&#10;    ): array" start="183" end="223" crap="1" executable="21" executed="21" coverage="100"/>
      <method name="getVersion" signature="getVersion(): string" start="225" end="251" crap="12" executable="15" executed="0" coverage="0"/>
      <method name="getInitialTestsFailRecommendations" signature="getInitialTestsFailRecommendations(string $commandLine): string" start="253" end="256" crap="2" executable="1" executed="0" coverage="0"/>
      <method name="getInterceptorFileContent" signature="getInterceptorFileContent(string $interceptorPath, string $originalFilePath, string $mutatedFilePath): string" start="258" end="281" crap="2.19" executable="11" executed="7" coverage="63.636363636364"/>
      <method name="createCustomBootstrapWithInterceptor" signature="createCustomBootstrapWithInterceptor(string $originalFilePath, string $mutatedFilePath): string" start="283" end="304" crap="3" executable="7" executed="7" coverage="100"/>
      <method name="getOriginalBootstrapFilePath" signature="getOriginalBootstrapFilePath(): ?string" start="306" end="322" crap="4" executable="9" executed="9" coverage="100"/>
      <method name="getInterceptorNamespacePrefix" signature="getInterceptorNamespacePrefix(): string" start="324" end="330" crap="1" executable="3" executed="3" coverage="100"/>
      <method name="prepareArgumentsAndOptions" signature="prepareArgumentsAndOptions(string $extraOptions): array" start="335" end="341" crap="1" executable="3" executed="3" coverage="100"/>
      <method name="getCoverageIncludeFiles" signature="getCoverageIncludeFiles(bool $skipCoverage): string" start="343" end="362" crap="3.01" executable="10" executed="9" coverage="90"/>
    </class>
    <coverage>
      <line nr="97">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterFactoryTest::test_it_creates_codeception_adapter"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_used_memory_amount with data set #3"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_used_memory_amount with data set #2"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_used_memory_amount with data set #1"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_used_memory_amount with data set #0"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_has_junit_report"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_if_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_codeception_name"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_the_output_dir_to_tmp_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_whether_tests_pass_or_not with data set #3"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_whether_tests_pass_or_not with data set #0"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_whether_tests_pass_or_not with data set #2"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_whether_tests_pass_or_not with data set #1"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_populates_include_coverage_key_from_src_folders_if_not_set"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_runs_tests_with_a_random_order"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_has_a_name"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_enables_coverage_if_not_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_coverage_phpunit_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_junit_xml_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_conforms_to_memory_usage_aware"/>
      </line>
      <line nr="98">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterFactoryTest::test_it_creates_codeception_adapter"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_used_memory_amount with data set #3"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_used_memory_amount with data set #2"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_used_memory_amount with data set #1"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_used_memory_amount with data set #0"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_has_junit_report"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_if_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_codeception_name"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_the_output_dir_to_tmp_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_whether_tests_pass_or_not with data set #3"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_whether_tests_pass_or_not with data set #0"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_whether_tests_pass_or_not with data set #2"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_whether_tests_pass_or_not with data set #1"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_populates_include_coverage_key_from_src_folders_if_not_set"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_runs_tests_with_a_random_order"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_has_a_name"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_enables_coverage_if_not_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_coverage_phpunit_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_junit_xml_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_conforms_to_memory_usage_aware"/>
      </line>
      <line nr="99">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterFactoryTest::test_it_creates_codeception_adapter"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_used_memory_amount with data set #3"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_used_memory_amount with data set #2"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_used_memory_amount with data set #1"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_used_memory_amount with data set #0"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_has_junit_report"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_if_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_codeception_name"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_the_output_dir_to_tmp_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_whether_tests_pass_or_not with data set #3"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_whether_tests_pass_or_not with data set #0"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_whether_tests_pass_or_not with data set #2"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_whether_tests_pass_or_not with data set #1"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_populates_include_coverage_key_from_src_folders_if_not_set"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_runs_tests_with_a_random_order"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_has_a_name"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_enables_coverage_if_not_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_coverage_phpunit_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_junit_xml_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_conforms_to_memory_usage_aware"/>
      </line>
      <line nr="100">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterFactoryTest::test_it_creates_codeception_adapter"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_used_memory_amount with data set #3"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_used_memory_amount with data set #2"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_used_memory_amount with data set #1"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_used_memory_amount with data set #0"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_has_junit_report"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_if_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_codeception_name"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_the_output_dir_to_tmp_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_whether_tests_pass_or_not with data set #3"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_whether_tests_pass_or_not with data set #0"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_whether_tests_pass_or_not with data set #2"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_whether_tests_pass_or_not with data set #1"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_populates_include_coverage_key_from_src_folders_if_not_set"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_runs_tests_with_a_random_order"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_has_a_name"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_enables_coverage_if_not_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_coverage_phpunit_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_junit_xml_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_conforms_to_memory_usage_aware"/>
      </line>
      <line nr="101">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterFactoryTest::test_it_creates_codeception_adapter"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_used_memory_amount with data set #3"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_used_memory_amount with data set #2"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_used_memory_amount with data set #1"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_used_memory_amount with data set #0"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_has_junit_report"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_if_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_codeception_name"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_the_output_dir_to_tmp_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_whether_tests_pass_or_not with data set #3"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_whether_tests_pass_or_not with data set #0"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_whether_tests_pass_or_not with data set #2"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_whether_tests_pass_or_not with data set #1"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_populates_include_coverage_key_from_src_folders_if_not_set"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_runs_tests_with_a_random_order"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_has_a_name"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_enables_coverage_if_not_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_coverage_phpunit_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_junit_xml_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_conforms_to_memory_usage_aware"/>
      </line>
      <line nr="102">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterFactoryTest::test_it_creates_codeception_adapter"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_used_memory_amount with data set #3"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_used_memory_amount with data set #2"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_used_memory_amount with data set #1"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_used_memory_amount with data set #0"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_has_junit_report"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_if_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_codeception_name"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_the_output_dir_to_tmp_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_whether_tests_pass_or_not with data set #3"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_whether_tests_pass_or_not with data set #0"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_whether_tests_pass_or_not with data set #2"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_whether_tests_pass_or_not with data set #1"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_populates_include_coverage_key_from_src_folders_if_not_set"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_runs_tests_with_a_random_order"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_has_a_name"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_enables_coverage_if_not_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_coverage_phpunit_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_junit_xml_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_conforms_to_memory_usage_aware"/>
      </line>
      <line nr="103">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterFactoryTest::test_it_creates_codeception_adapter"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_used_memory_amount with data set #3"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_used_memory_amount with data set #2"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_used_memory_amount with data set #1"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_used_memory_amount with data set #0"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_has_junit_report"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_if_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_codeception_name"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_the_output_dir_to_tmp_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_whether_tests_pass_or_not with data set #3"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_whether_tests_pass_or_not with data set #0"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_whether_tests_pass_or_not with data set #2"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_whether_tests_pass_or_not with data set #1"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_populates_include_coverage_key_from_src_folders_if_not_set"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_runs_tests_with_a_random_order"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_has_a_name"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_enables_coverage_if_not_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_coverage_phpunit_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_junit_xml_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_conforms_to_memory_usage_aware"/>
      </line>
      <line nr="104">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterFactoryTest::test_it_creates_codeception_adapter"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_used_memory_amount with data set #3"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_used_memory_amount with data set #2"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_used_memory_amount with data set #1"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_used_memory_amount with data set #0"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_has_junit_report"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_if_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_codeception_name"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_the_output_dir_to_tmp_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_whether_tests_pass_or_not with data set #3"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_whether_tests_pass_or_not with data set #0"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_whether_tests_pass_or_not with data set #2"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_whether_tests_pass_or_not with data set #1"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_populates_include_coverage_key_from_src_folders_if_not_set"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_runs_tests_with_a_random_order"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_has_a_name"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_enables_coverage_if_not_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_coverage_phpunit_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_junit_xml_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_conforms_to_memory_usage_aware"/>
      </line>
      <line nr="105">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterFactoryTest::test_it_creates_codeception_adapter"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_used_memory_amount with data set #3"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_used_memory_amount with data set #2"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_used_memory_amount with data set #1"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_used_memory_amount with data set #0"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_has_junit_report"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_if_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_codeception_name"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_the_output_dir_to_tmp_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_whether_tests_pass_or_not with data set #3"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_whether_tests_pass_or_not with data set #0"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_whether_tests_pass_or_not with data set #2"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_whether_tests_pass_or_not with data set #1"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_populates_include_coverage_key_from_src_folders_if_not_set"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_runs_tests_with_a_random_order"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_has_a_name"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_enables_coverage_if_not_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_coverage_phpunit_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_junit_xml_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_conforms_to_memory_usage_aware"/>
      </line>
      <line nr="106">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterFactoryTest::test_it_creates_codeception_adapter"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_used_memory_amount with data set #3"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_used_memory_amount with data set #2"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_used_memory_amount with data set #1"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_used_memory_amount with data set #0"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_has_junit_report"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_if_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_codeception_name"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_the_output_dir_to_tmp_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_whether_tests_pass_or_not with data set #3"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_whether_tests_pass_or_not with data set #0"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_whether_tests_pass_or_not with data set #2"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_whether_tests_pass_or_not with data set #1"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_populates_include_coverage_key_from_src_folders_if_not_set"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_runs_tests_with_a_random_order"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_has_a_name"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_enables_coverage_if_not_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_coverage_phpunit_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_junit_xml_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_conforms_to_memory_usage_aware"/>
      </line>
      <line nr="107">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterFactoryTest::test_it_creates_codeception_adapter"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_used_memory_amount with data set #3"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_used_memory_amount with data set #2"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_used_memory_amount with data set #1"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_used_memory_amount with data set #0"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_has_junit_report"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_if_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_codeception_name"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_the_output_dir_to_tmp_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_whether_tests_pass_or_not with data set #3"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_whether_tests_pass_or_not with data set #0"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_whether_tests_pass_or_not with data set #2"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_whether_tests_pass_or_not with data set #1"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_populates_include_coverage_key_from_src_folders_if_not_set"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_runs_tests_with_a_random_order"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_has_a_name"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_enables_coverage_if_not_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_coverage_phpunit_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_junit_xml_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_conforms_to_memory_usage_aware"/>
      </line>
      <line nr="111">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_has_junit_report"/>
      </line>
      <line nr="116">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_whether_tests_pass_or_not with data set #3"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_whether_tests_pass_or_not with data set #0"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_whether_tests_pass_or_not with data set #2"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_whether_tests_pass_or_not with data set #1"/>
      </line>
      <line nr="117">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_whether_tests_pass_or_not with data set #2"/>
      </line>
      <line nr="120">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_whether_tests_pass_or_not with data set #3"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_whether_tests_pass_or_not with data set #0"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_whether_tests_pass_or_not with data set #1"/>
      </line>
      <line nr="121">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_whether_tests_pass_or_not with data set #3"/>
      </line>
      <line nr="125">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_whether_tests_pass_or_not with data set #0"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_whether_tests_pass_or_not with data set #1"/>
      </line>
      <line nr="128">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_whether_tests_pass_or_not with data set #0"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_whether_tests_pass_or_not with data set #1"/>
      </line>
      <line nr="131">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_whether_tests_pass_or_not with data set #0"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_whether_tests_pass_or_not with data set #1"/>
      </line>
      <line nr="133">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_whether_tests_pass_or_not with data set #0"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_whether_tests_pass_or_not with data set #1"/>
      </line>
      <line nr="138">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_used_memory_amount with data set #3"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_used_memory_amount with data set #2"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_used_memory_amount with data set #1"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_used_memory_amount with data set #0"/>
      </line>
      <line nr="139">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_used_memory_amount with data set #2"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_used_memory_amount with data set #1"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_used_memory_amount with data set #0"/>
      </line>
      <line nr="142">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_determines_used_memory_amount with data set #3"/>
      </line>
      <line nr="147">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_codeception_name"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_has_a_name"/>
      </line>
      <line nr="152">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_if_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_the_output_dir_to_tmp_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_populates_include_coverage_key_from_src_folders_if_not_set"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_runs_tests_with_a_random_order"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_enables_coverage_if_not_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_coverage_phpunit_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_junit_xml_path"/>
      </line>
      <line nr="154">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_if_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_the_output_dir_to_tmp_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_populates_include_coverage_key_from_src_folders_if_not_set"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_runs_tests_with_a_random_order"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_enables_coverage_if_not_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_coverage_phpunit_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_junit_xml_path"/>
      </line>
      <line nr="155">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_if_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_the_output_dir_to_tmp_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_populates_include_coverage_key_from_src_folders_if_not_set"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_runs_tests_with_a_random_order"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_enables_coverage_if_not_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_coverage_phpunit_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_junit_xml_path"/>
      </line>
      <line nr="157">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_if_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_the_output_dir_to_tmp_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_populates_include_coverage_key_from_src_folders_if_not_set"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_runs_tests_with_a_random_order"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_enables_coverage_if_not_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_coverage_phpunit_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_junit_xml_path"/>
      </line>
      <line nr="160">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_if_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_the_output_dir_to_tmp_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_populates_include_coverage_key_from_src_folders_if_not_set"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_runs_tests_with_a_random_order"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_enables_coverage_if_not_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_coverage_phpunit_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_junit_xml_path"/>
      </line>
      <line nr="161">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_if_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_the_output_dir_to_tmp_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_populates_include_coverage_key_from_src_folders_if_not_set"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_runs_tests_with_a_random_order"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_enables_coverage_if_not_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_coverage_phpunit_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_junit_xml_path"/>
      </line>
      <line nr="163">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_if_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_the_output_dir_to_tmp_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_populates_include_coverage_key_from_src_folders_if_not_set"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_runs_tests_with_a_random_order"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_enables_coverage_if_not_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_coverage_phpunit_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_junit_xml_path"/>
      </line>
      <line nr="164">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_if_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_the_output_dir_to_tmp_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_populates_include_coverage_key_from_src_folders_if_not_set"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_runs_tests_with_a_random_order"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_enables_coverage_if_not_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_coverage_phpunit_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_junit_xml_path"/>
      </line>
      <line nr="165">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_if_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_the_output_dir_to_tmp_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_populates_include_coverage_key_from_src_folders_if_not_set"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_runs_tests_with_a_random_order"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_enables_coverage_if_not_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_coverage_phpunit_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_junit_xml_path"/>
      </line>
      <line nr="166">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_if_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_the_output_dir_to_tmp_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_populates_include_coverage_key_from_src_folders_if_not_set"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_runs_tests_with_a_random_order"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_enables_coverage_if_not_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_coverage_phpunit_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_junit_xml_path"/>
      </line>
      <line nr="167">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_if_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_the_output_dir_to_tmp_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_populates_include_coverage_key_from_src_folders_if_not_set"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_runs_tests_with_a_random_order"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_enables_coverage_if_not_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_coverage_phpunit_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_junit_xml_path"/>
      </line>
      <line nr="168">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_if_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_the_output_dir_to_tmp_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_populates_include_coverage_key_from_src_folders_if_not_set"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_runs_tests_with_a_random_order"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_enables_coverage_if_not_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_coverage_phpunit_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_junit_xml_path"/>
      </line>
      <line nr="169">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_if_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_the_output_dir_to_tmp_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_populates_include_coverage_key_from_src_folders_if_not_set"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_runs_tests_with_a_random_order"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_enables_coverage_if_not_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_coverage_phpunit_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_junit_xml_path"/>
      </line>
      <line nr="170">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_if_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_the_output_dir_to_tmp_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_populates_include_coverage_key_from_src_folders_if_not_set"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_runs_tests_with_a_random_order"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_enables_coverage_if_not_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_coverage_phpunit_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_junit_xml_path"/>
      </line>
      <line nr="171">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_if_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_the_output_dir_to_tmp_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_populates_include_coverage_key_from_src_folders_if_not_set"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_runs_tests_with_a_random_order"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_enables_coverage_if_not_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_coverage_phpunit_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_junit_xml_path"/>
      </line>
      <line nr="172">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_if_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_the_output_dir_to_tmp_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_populates_include_coverage_key_from_src_folders_if_not_set"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_runs_tests_with_a_random_order"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_enables_coverage_if_not_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_coverage_phpunit_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_junit_xml_path"/>
      </line>
      <line nr="190">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
      </line>
      <line nr="192">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
      </line>
      <line nr="194">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
      </line>
      <line nr="196">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
      </line>
      <line nr="197">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
      </line>
      <line nr="198">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
      </line>
      <line nr="202">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
      </line>
      <line nr="204">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
      </line>
      <line nr="206">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
      </line>
      <line nr="209">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
      </line>
      <line nr="210">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
      </line>
      <line nr="211">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
      </line>
      <line nr="212">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
      </line>
      <line nr="213">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
      </line>
      <line nr="214">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
      </line>
      <line nr="215">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
      </line>
      <line nr="216">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
      </line>
      <line nr="217">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
      </line>
      <line nr="218">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
      </line>
      <line nr="219">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
      </line>
      <line nr="220">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
      </line>
      <line nr="260">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
      </line>
      <line nr="262">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
      </line>
      <line nr="270">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
      </line>
      <line nr="273">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
      </line>
      <line nr="274">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
      </line>
      <line nr="276">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
      </line>
      <line nr="278">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
      </line>
      <line nr="285">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
      </line>
      <line nr="286">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
      </line>
      <line nr="288">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
      </line>
      <line nr="289">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
      </line>
      <line nr="292">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
      </line>
      <line nr="299">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
      </line>
      <line nr="302">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
      </line>
      <line nr="308">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
      </line>
      <line nr="309">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
      </line>
      <line nr="312">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
      </line>
      <line nr="313">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
      </line>
      <line nr="316">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
      </line>
      <line nr="317">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
      </line>
      <line nr="318">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
      </line>
      <line nr="319">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
      </line>
      <line nr="320">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
      </line>
      <line nr="326">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
      </line>
      <line nr="327">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
      </line>
      <line nr="329">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
      </line>
      <line nr="337">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_if_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_the_output_dir_to_tmp_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_populates_include_coverage_key_from_src_folders_if_not_set"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_runs_tests_with_a_random_order"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_enables_coverage_if_not_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_coverage_phpunit_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_junit_xml_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
      </line>
      <line nr="338">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_if_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_the_output_dir_to_tmp_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_populates_include_coverage_key_from_src_folders_if_not_set"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_runs_tests_with_a_random_order"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_enables_coverage_if_not_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_coverage_phpunit_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_junit_xml_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
      </line>
      <line nr="339">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_adds_extra_options_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_relative_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_if_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_the_output_dir_to_tmp_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_creates_interceptor_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_for_mutant_command_line"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_populates_include_coverage_key_from_src_folders_if_not_set"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_adds_original_bootstrap_to_the_created_config_file_with_absolute_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_bootstrap_file"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_does_not_add_original_bootstrap_to_the_created_config_file_if_not_exists"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_runs_tests_with_a_random_order"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_enables_coverage_if_not_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_coverage_phpunit_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_junit_xml_path"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_infection_group"/>
      </line>
      <line nr="346">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_if_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_the_output_dir_to_tmp_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_populates_include_coverage_key_from_src_folders_if_not_set"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_runs_tests_with_a_random_order"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_enables_coverage_if_not_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_coverage_phpunit_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_junit_xml_path"/>
      </line>
      <line nr="347">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_disables_coverage_if_skipped"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_the_output_dir_to_tmp_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_coverage_phpunit_dir"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_sets_junit_xml_path"/>
      </line>
      <line nr="350">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_populates_include_coverage_key_from_src_folders_if_not_set"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_runs_tests_with_a_random_order"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_enables_coverage_if_not_skipped"/>
      </line>
      <line nr="352">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_populates_include_coverage_key_from_src_folders_if_not_set"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_runs_tests_with_a_random_order"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_enables_coverage_if_not_skipped"/>
      </line>
      <line nr="354">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_populates_include_coverage_key_from_src_folders_if_not_set"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_runs_tests_with_a_random_order"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_enables_coverage_if_not_skipped"/>
      </line>
      <line nr="357">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_populates_include_coverage_key_from_src_folders_if_not_set"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_runs_tests_with_a_random_order"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_enables_coverage_if_not_skipped"/>
      </line>
      <line nr="358">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_populates_include_coverage_key_from_src_folders_if_not_set"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_runs_tests_with_a_random_order"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_enables_coverage_if_not_skipped"/>
      </line>
      <line nr="361">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_populates_include_coverage_key_from_src_folders_if_not_set"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_runs_tests_with_a_random_order"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_enables_coverage_if_not_skipped"/>
      </line>
      <line nr="356">
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_populates_include_coverage_key_from_src_folders_if_not_set"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_runs_tests_with_a_random_order"/>
        <covered by="Infection\Tests\TestFramework\Codeception\CodeceptionAdapterTest::test_it_enables_coverage_if_not_skipped"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="3">
        <token name="T_DOC_COMMENT"> * This code is licensed under the BSD 3-Clause License.</token>
      </line>
      <line no="4">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="5">
        <token name="T_DOC_COMMENT"> * Copyright (c) 2017, Maks Rafalko</token>
      </line>
      <line no="6">
        <token name="T_DOC_COMMENT"> * All rights reserved.</token>
      </line>
      <line no="7">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="8">
        <token name="T_DOC_COMMENT"> * Redistribution and use in source and binary forms, with or without</token>
      </line>
      <line no="9">
        <token name="T_DOC_COMMENT"> * modification, are permitted provided that the following conditions are met:</token>
      </line>
      <line no="10">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="11">
        <token name="T_DOC_COMMENT"> * * Redistributions of source code must retain the above copyright notice, this</token>
      </line>
      <line no="12">
        <token name="T_DOC_COMMENT"> *   list of conditions and the following disclaimer.</token>
      </line>
      <line no="13">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="14">
        <token name="T_DOC_COMMENT"> * * Redistributions in binary form must reproduce the above copyright notice,</token>
      </line>
      <line no="15">
        <token name="T_DOC_COMMENT"> *   this list of conditions and the following disclaimer in the documentation</token>
      </line>
      <line no="16">
        <token name="T_DOC_COMMENT"> *   and/or other materials provided with the distribution.</token>
      </line>
      <line no="17">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="18">
        <token name="T_DOC_COMMENT"> * * Neither the name of the copyright holder nor the names of its</token>
      </line>
      <line no="19">
        <token name="T_DOC_COMMENT"> *   contributors may be used to endorse or promote products derived from</token>
      </line>
      <line no="20">
        <token name="T_DOC_COMMENT"> *   this software without specific prior written permission.</token>
      </line>
      <line no="21">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="22">
        <token name="T_DOC_COMMENT"> * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"</token>
      </line>
      <line no="23">
        <token name="T_DOC_COMMENT"> * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE</token>
      </line>
      <line no="24">
        <token name="T_DOC_COMMENT"> * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE</token>
      </line>
      <line no="25">
        <token name="T_DOC_COMMENT"> * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE</token>
      </line>
      <line no="26">
        <token name="T_DOC_COMMENT"> * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL</token>
      </line>
      <line no="27">
        <token name="T_DOC_COMMENT"> * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR</token>
      </line>
      <line no="28">
        <token name="T_DOC_COMMENT"> * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER</token>
      </line>
      <line no="29">
        <token name="T_DOC_COMMENT"> * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,</token>
      </line>
      <line no="30">
        <token name="T_DOC_COMMENT"> * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE</token>
      </line>
      <line no="31">
        <token name="T_DOC_COMMENT"> * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</token>
      </line>
      <line no="32">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="33"/>
      <line no="34">
        <token name="T_DECLARE">declare</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">strict_types</token>
        <token name="T_EQUAL">=</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="35"/>
      <line no="36">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Infection</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">TestFramework</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Codeception</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="37"/>
      <line no="38">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_key_exists</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="39">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">assert</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="40">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Infection</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">AbstractTestFramework</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Coverage</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">TestLocation</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="41">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Infection</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">AbstractTestFramework</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">MemoryUsageAware</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="42">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Infection</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">AbstractTestFramework</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">TestFrameworkAdapter</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="43">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Infection</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">StreamWrapper</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">IncludeInterceptor</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="44">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Infection</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">TestFramework</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Codeception</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Coverage</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">JUnitTestCaseSorter</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="45">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">InvalidArgumentException</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="46">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">is_string</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="47">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Phar</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="48">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ReflectionClass</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="49">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Safe</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">file_put_contents</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="50">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Symfony</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Component</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Filesystem</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Filesystem</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="51">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Symfony</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Component</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Process</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Process</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="52"/>
      <line no="53">
        <token name="T_FINAL">final</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CodeceptionAdapter</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IMPLEMENTS">implements</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MemoryUsageAware</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">TestFrameworkAdapter</token>
      </line>
      <line no="54">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="55">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">COVERAGE_DIR</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'codeception-coverage-xml'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="56"/>
      <line no="57">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">NAME</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'codeception'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="58"/>
      <line no="59">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">DEFAULT_ARGS_AND_OPTIONS</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="60">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'run'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="61">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'--no-colors'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="62">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'--fail-fast'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="63">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="64"/>
      <line no="65">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$testFrameworkExecutable</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="66">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$commandLineBuilder</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="67">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$versionParser</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="68">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jUnitTestCaseSorter</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="69">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$filesystem</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="70">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jUnitFilePath</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="71">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$tmpDir</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="72">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$projectDir</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="73">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$originalConfigContentParsed</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="74">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$srcDirs</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="75"/>
      <line no="76">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="77">
        <token name="T_DOC_COMMENT">     * @var string|null</token>
      </line>
      <line no="78">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="79">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$cachedVersion</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="80"/>
      <line no="81">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="82">
        <token name="T_DOC_COMMENT">     * @param array&lt;string, mixed&gt; $originalConfigContentParsed</token>
      </line>
      <line no="83">
        <token name="T_DOC_COMMENT">     * @param array&lt;string&gt; $srcDirs</token>
      </line>
      <line no="84">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="85">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="86">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$testFrameworkExecutable</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="87">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">CommandLineBuilder</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$commandLineBuilder</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="88">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">VersionParser</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$versionParser</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="89">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">JUnitTestCaseSorter</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jUnitTestCaseSorter</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="90">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">Filesystem</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$filesystem</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="91">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jUnitFilePath</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="92">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$tmpDir</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="93">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$projectDir</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="94">
        <token name="T_WHITESPACE">        </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$originalConfigContentParsed</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="95">
        <token name="T_WHITESPACE">        </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$srcDirs</token>
      </line>
      <line no="96">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="97">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">commandLineBuilder</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$commandLineBuilder</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="98">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">testFrameworkExecutable</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$testFrameworkExecutable</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="99">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">versionParser</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$versionParser</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="100">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">jUnitFilePath</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jUnitFilePath</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="101">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">tmpDir</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$tmpDir</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="102">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">jUnitTestCaseSorter</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jUnitTestCaseSorter</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="103">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">filesystem</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$filesystem</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="104">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">projectDir</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$projectDir</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="105">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">originalConfigContentParsed</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$originalConfigContentParsed</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="106">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">srcDirs</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$srcDirs</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="107">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="108"/>
      <line no="109">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">hasJUnitReport</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
      </line>
      <line no="110">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="111">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="112">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="113"/>
      <line no="114">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">testsPass</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$output</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
      </line>
      <line no="115">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="116">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">preg_match</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/failures!/i'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$output</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_GT">&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="117">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="118">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="119"/>
      <line no="120">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">preg_match</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/errors!/i'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$output</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_GT">&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="121">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="122">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="123"/>
      <line no="124">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// OK (XX tests, YY assertions)</token>
      </line>
      <line no="125">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$isOk</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">preg_match</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/OK\s\(/'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$output</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_GT">&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="126"/>
      <line no="127">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// "OK, but incomplete, skipped, or risky tests!"</token>
      </line>
      <line no="128">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$isOkWithInfo</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">preg_match</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/OK\s?,/'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$output</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_GT">&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="129"/>
      <line no="130">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// "Warnings!" - e.g. when deprecated functions are used, but tests pass</token>
      </line>
      <line no="131">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$isWarning</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">preg_match</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/warnings!/i'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$output</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_GT">&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="132"/>
      <line no="133">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$isOk</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$isOkWithInfo</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$isWarning</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="134">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="135"/>
      <line no="136">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getMemoryUsed</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$output</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">float</token>
      </line>
      <line no="137">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="138">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">preg_match</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/Memory: (\d+(?:\.\d+))\s*MB/'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$output</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$match</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_GT">&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="139">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_CAST">(float)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$match</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="140">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="141"/>
      <line no="142">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_MINUS">-</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="143">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="144"/>
      <line no="145">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getName</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
      </line>
      <line no="146">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="147">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">NAME</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="148">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="149"/>
      <line no="150">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getInitialTestRunCommandLine</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$extraOptions</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$phpExtraArgs</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$skipCoverage</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
      </line>
      <line no="151">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="152">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$argumentsAndOptions</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">prepareArgumentsAndOptions</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$extraOptions</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="153"/>
      <line no="154">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">commandLineBuilder</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">build</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="155">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">testFrameworkExecutable</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="156">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$phpExtraArgs</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="157">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">array_merge</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="158">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$argumentsAndOptions</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="159">
        <token name="T_WHITESPACE">                </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="160">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'--coverage-phpunit'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="161">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">COVERAGE_DIR</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="162">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_COMMENT">// JUnit report</token>
      </line>
      <line no="163">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'--xml'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="164">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">jUnitFilePath</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="165">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'-o'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="166">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">paths: output: </token>
        <token name="T_CURLY_OPEN">{</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">tmpDir</token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="167">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'-o'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="168">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_STRING">sprintf</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'coverage: enabled: %s'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Stringifier</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">stringifyBoolean</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_VARIABLE">$skipCoverage</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="169">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'-o'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="170">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_STRING">sprintf</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'coverage: include: %s'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getCoverageIncludeFiles</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$skipCoverage</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="171">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'-o'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="172">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'settings: shuffle: true'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="173">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_SQUARE">]</token>
      </line>
      <line no="174">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="175">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="176">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="177"/>
      <line no="178">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="179">
        <token name="T_DOC_COMMENT">     * @param TestLocation[] $tests</token>
      </line>
      <line no="180">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="181">
        <token name="T_DOC_COMMENT">     * @return string[]</token>
      </line>
      <line no="182">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="183">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getMutantCommandLine</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="184">
        <token name="T_WHITESPACE">        </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$tests</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="185">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$mutatedFilePath</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="186">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$mutationHash</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="187">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$mutationOriginalFilePath</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="188">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$extraOptions</token>
      </line>
      <line no="189">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="190">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$argumentsAndOptions</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">prepareArgumentsAndOptions</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$extraOptions</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="191"/>
      <line no="192">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$commandLine</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">commandLineBuilder</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">build</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">testFrameworkExecutable</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$argumentsAndOptions</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="193"/>
      <line no="194">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$output</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">sprintf</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'%s/%s'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">tmpDir</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$mutationHash</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="195"/>
      <line no="196">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$interceptorFilePath</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">sprintf</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="197">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'%s/interceptor.codeception.%s.php'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="198">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">tmpDir</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="199">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$mutationHash</token>
      </line>
      <line no="200">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="201"/>
      <line no="202">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">file_put_contents</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$interceptorFilePath</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">createCustomBootstrapWithInterceptor</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$mutationOriginalFilePath</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$mutatedFilePath</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">LOCK_EX</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="203"/>
      <line no="204">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$uniqueTestFilePaths</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">implode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">','</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">jUnitTestCaseSorter</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getUniqueSortedFileNames</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$tests</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="205"/>
      <line no="206">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_merge</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="207">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$commandLine</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="208">
        <token name="T_WHITESPACE">            </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="209">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'--group'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="210">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'infection'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="211">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'--bootstrap'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="212">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$interceptorFilePath</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="213">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'-o'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="214">
        <token name="T_WHITESPACE">                </token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">paths: output: </token>
        <token name="T_CURLY_OPEN">{</token>
        <token name="T_VARIABLE">$output</token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="215">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'-o'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="216">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'coverage: enabled: false'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="217">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'-o'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="218">
        <token name="T_WHITESPACE">                </token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">bootstrap: </token>
        <token name="T_CURLY_OPEN">{</token>
        <token name="T_VARIABLE">$interceptorFilePath</token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="219">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'-o'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="220">
        <token name="T_WHITESPACE">                </token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">groups: infection: [</token>
        <token name="T_VARIABLE">$uniqueTestFilePaths</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">]</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="221">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_SQUARE">]</token>
      </line>
      <line no="222">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="223">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="224"/>
      <line no="225">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getVersion</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
      </line>
      <line no="226">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="227">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">cachedVersion</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="228">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">cachedVersion</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="229">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="230"/>
      <line no="231">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$testFrameworkVersionExecutable</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">commandLineBuilder</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">build</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="232">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">testFrameworkExecutable</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="233">
        <token name="T_WHITESPACE">            </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="234">
        <token name="T_WHITESPACE">            </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'--version'</token>
        <token name="T_CLOSE_SQUARE">]</token>
      </line>
      <line no="235">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="236"/>
      <line no="237">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$process</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Process</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$testFrameworkVersionExecutable</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="238">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$process</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">mustRun</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="239"/>
      <line no="240">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$version</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'unknown'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="241"/>
      <line no="242">
        <token name="T_WHITESPACE">        </token>
        <token name="T_TRY">try</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="243">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$version</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">versionParser</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">parse</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$process</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getOutput</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="244">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CATCH">catch</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">InvalidArgumentException</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$e</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="245">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$version</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'unknown'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="246">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FINALLY">finally</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="247">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">cachedVersion</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$version</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="248">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="249"/>
      <line no="250">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">cachedVersion</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="251">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="252"/>
      <line no="253">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getInitialTestsFailRecommendations</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$commandLine</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
      </line>
      <line no="254">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="255">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">sprintf</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Check the executed command to identify the problem: %s'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$commandLine</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="256">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="257"/>
      <line no="258">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getInterceptorFileContent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$interceptorPath</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$originalFilePath</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$mutatedFilePath</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
      </line>
      <line no="259">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="260">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$infectionPhar</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="261"/>
      <line no="262">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">strpos</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_FILE">__FILE__</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'phar:'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="263">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$infectionPhar</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">sprintf</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="264">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'\Phar::loadPhar("%s", "%s");'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="265">
        <token name="T_WHITESPACE">                </token>
        <token name="T_STRING">str_replace</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'phar://'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Phar</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">running</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">true</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="266">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'infection.phar'</token>
      </line>
      <line no="267">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="268">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="269"/>
      <line no="270">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$namespacePrefix</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getInterceptorNamespacePrefix</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="271"/>
      <line no="272">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_START_HEREDOC">&lt;&lt;&lt;CONTENT</token>
      </line>
      <line no="273">
        <token name="T_CURLY_OPEN">{</token>
        <token name="T_VARIABLE">$infectionPhar</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="274">
        <token name="T_ENCAPSED_AND_WHITESPACE">require_once '</token>
        <token name="T_CURLY_OPEN">{</token>
        <token name="T_VARIABLE">$interceptorPath</token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">';</token>
      </line>
      <line no="275"/>
      <line no="276">
        <token name="T_ENCAPSED_AND_WHITESPACE">use </token>
        <token name="T_CURLY_OPEN">{</token>
        <token name="T_VARIABLE">$namespacePrefix</token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">Infection\StreamWrapper\IncludeInterceptor;</token>
      </line>
      <line no="277"/>
      <line no="278">
        <token name="T_ENCAPSED_AND_WHITESPACE">IncludeInterceptor::intercept('</token>
        <token name="T_CURLY_OPEN">{</token>
        <token name="T_VARIABLE">$originalFilePath</token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">', '</token>
        <token name="T_CURLY_OPEN">{</token>
        <token name="T_VARIABLE">$mutatedFilePath</token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">');</token>
      </line>
      <line no="279">
        <token name="T_ENCAPSED_AND_WHITESPACE">IncludeInterceptor::enable();</token>
      </line>
      <line no="280">
        <token name="T_END_HEREDOC">CONTENT</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="281">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="282"/>
      <line no="283">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">createCustomBootstrapWithInterceptor</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$originalFilePath</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$mutatedFilePath</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
      </line>
      <line no="284">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="285">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$originalBootstrap</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getOriginalBootstrapFilePath</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="286">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$bootstrapPlaceholder</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$originalBootstrap</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">strlen</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$originalBootstrap</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_GT">&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">require_once '</token>
        <token name="T_CURLY_OPEN">{</token>
        <token name="T_VARIABLE">$originalBootstrap</token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">';</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="287"/>
      <line no="288">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ReflectionClass</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">IncludeInterceptor</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_CLASS">class</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="289">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$interceptorPath</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$class</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getFileName</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="290"/>
      <line no="291">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$customBootstrap</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_START_HEREDOC">&lt;&lt;&lt;AUTOLOAD</token>
      </line>
      <line no="292">
        <token name="T_ENCAPSED_AND_WHITESPACE">&lt;?php</token>
      </line>
      <line no="293"/>
      <line no="294">
        <token name="T_ENCAPSED_AND_WHITESPACE">%s</token>
      </line>
      <line no="295">
        <token name="T_ENCAPSED_AND_WHITESPACE">%s</token>
      </line>
      <line no="296"/>
      <line no="297">
        <token name="T_END_HEREDOC">AUTOLOAD</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="298"/>
      <line no="299">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">sprintf</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="300">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$customBootstrap</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="301">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$bootstrapPlaceholder</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="302">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getInterceptorFileContent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING_CAST">(string)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$interceptorPath</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$originalFilePath</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$mutatedFilePath</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="303">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="304">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="305"/>
      <line no="306">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getOriginalBootstrapFilePath</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">string</token>
      </line>
      <line no="307">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="308">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_STRING">array_key_exists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'bootstrap'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">originalConfigContentParsed</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="309">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="310">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="311"/>
      <line no="312">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">filesystem</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isAbsolutePath</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">originalConfigContentParsed</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'bootstrap'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="313">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">originalConfigContentParsed</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'bootstrap'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="314">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="315"/>
      <line no="316">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">sprintf</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="317">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'%s/%s/%s'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="318">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">projectDir</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="319">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">originalConfigContentParsed</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'paths'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'tests'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'tests'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="320">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">originalConfigContentParsed</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'bootstrap'</token>
        <token name="T_CLOSE_SQUARE">]</token>
      </line>
      <line no="321">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="322">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="323"/>
      <line no="324">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getInterceptorNamespacePrefix</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
      </line>
      <line no="325">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="326">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$prefix</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">strstr</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_NS_C">__NAMESPACE__</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Infection'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="327">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">assert</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">is_string</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$prefix</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="328"/>
      <line no="329">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$prefix</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="330">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="331"/>
      <line no="332">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="333">
        <token name="T_DOC_COMMENT">     * @return string[]</token>
      </line>
      <line no="334">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="335">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">prepareArgumentsAndOptions</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$extraOptions</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
      </line>
      <line no="336">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="337">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_filter</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">array_merge</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="338">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">explode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">' '</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$extraOptions</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="339">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">DEFAULT_ARGS_AND_OPTIONS</token>
      </line>
      <line no="340">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="341">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="342"/>
      <line no="343">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getCoverageIncludeFiles</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">bool</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$skipCoverage</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
      </line>
      <line no="344">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="345">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// if coverage should be skipped, this anyway will be ignored, return early</token>
      </line>
      <line no="346">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$skipCoverage</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="347">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Stringifier</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">stringifyArray</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="348">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="349"/>
      <line no="350">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$coverage</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_merge</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">originalConfigContentParsed</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'coverage'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'enabled'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="351"/>
      <line no="352">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$includedFiles</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_key_exists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'include'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$coverage</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="353">
        <token name="T_WHITESPACE">            </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$coverage</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'include'</token>
        <token name="T_CLOSE_SQUARE">]</token>
      </line>
      <line no="354">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_map</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="355">
        <token name="T_WHITESPACE">                </token>
        <token name="T_STATIC">static</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$dir</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="356">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">trim</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$dir</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/*.php'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="357">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="358">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">srcDirs</token>
      </line>
      <line no="359">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="360"/>
      <line no="361">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Stringifier</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">stringifyArray</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$includedFiles</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="362">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="363">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="364"/>
    </source>
  </file>
</phpunit>
